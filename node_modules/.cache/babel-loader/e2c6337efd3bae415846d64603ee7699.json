{"ast":null,"code":"import _regeneratorRuntime from\"/Users/johnsaville/Desktop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johnsaville/Desktop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useState,useEffect,useContext}from\"react\";import SearchForm from\"../common/SearchForm\";import A2Api from\"../api/a2api\";import LoadingSpinner from\"../common/LoadingSpinner\";import PostCard from\"./PostCard\";import{useHistory}from\"react-router-dom\";import'../styles/PostsDisplay.css';import TopBanner from\"../top-banner/TopBanner\";import PostContext from\"./PostContext\";function PostsDisplay(){// const [posts, setPosts] = useState(null);\nvar _useContext=useContext(PostContext),allPosts=_useContext.allPosts,setAllPosts=_useContext.setAllPosts;useEffect(function getPostsOnMount(){search();},[]);function search(_x){return _search.apply(this,arguments);}function _search(){_search=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(params){var posts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return A2Api.getPosts(params);case 2:posts=_context.sent;setAllPosts(posts);case 4:case\"end\":return _context.stop();}}},_callee);}));return _search.apply(this,arguments);}var history=useHistory();if(!allPosts)return/*#__PURE__*/React.createElement(LoadingSpinner,null);function clickHandler(e){var elem=e.target;var maxJumps=99;while(elem.className!='PostCard'&&maxJumps>0){maxJumps--;elem=elem.parentNode;}var postId=elem.id.slice(9);history.push(\"/posts/\".concat(postId));}return/*#__PURE__*/React.createElement(\"div\",{className:\"main-view\"},/*#__PURE__*/React.createElement(TopBanner,null),/*#__PURE__*/React.createElement(\"div\",{className:\"posts-display\"},/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(e){return clickHandler(e);}},allPosts.map(function(p){return/*#__PURE__*/React.createElement(PostCard,{key:p.id,post_date:p.post_date,poster_handle:p.poster_handle,post_body:p.post_body,post_subject:p.post_subject,post_tags:p.post_tags,admin_post:p.admin_post,reply_to:p.reply_to,image:p.image,id:p.id});})),\";\"));}export default PostsDisplay;","map":{"version":3,"sources":["/Users/johnsaville/Desktop/frontend/src/posts/PostsDisplay.js"],"names":["React","useState","useEffect","useContext","SearchForm","A2Api","LoadingSpinner","PostCard","useHistory","TopBanner","PostContext","PostsDisplay","allPosts","setAllPosts","getPostsOnMount","search","params","getPosts","posts","history","clickHandler","e","elem","target","maxJumps","className","parentNode","postId","id","slice","push","map","p","post_date","poster_handle","post_body","post_subject","post_tags","admin_post","reply_to","image"],"mappings":"iTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,cAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAO,4BAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,QAASC,CAAAA,YAAT,EAAuB,CAEnB;AAEA,gBAA+BR,UAAU,CAACO,WAAD,CAAzC,CAAOE,QAAP,aAAOA,QAAP,CAAgBC,WAAhB,aAAgBA,WAAhB,CAEAX,SAAS,CAAC,QAASY,CAAAA,eAAT,EAA2B,CACnCC,MAAM,GACP,CAFQ,CAEN,EAFM,CAAT,CANmB,QAUJA,CAAAA,MAVI,8HAUnB,iBAAsBC,MAAtB,kJACoBX,CAAAA,KAAK,CAACY,QAAN,CAAeD,MAAf,CADpB,QACME,KADN,eAEEL,WAAW,CAACK,KAAD,CAAX,CAFF,sDAVmB,yCAenB,GAAMC,CAAAA,OAAO,CAAGX,UAAU,EAA1B,CAEA,GAAI,CAACI,QAAL,CAAe,mBAAO,oBAAC,cAAD,MAAP,CAEf,QAASQ,CAAAA,YAAT,CAAsBC,CAAtB,CAAwB,CACtB,GAAIC,CAAAA,IAAI,CAAGD,CAAC,CAACE,MAAb,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,MAAMF,IAAI,CAACG,SAAL,EAAkB,UAAlB,EAAgCD,QAAQ,CAAG,CAAjD,CAAmD,CACjDA,QAAQ,GACRF,IAAI,CAAGA,IAAI,CAACI,UAAZ,CACD,CACD,GAAMC,CAAAA,MAAM,CAAGL,IAAI,CAACM,EAAL,CAAQC,KAAR,CAAc,CAAd,CAAf,CACAV,OAAO,CAACW,IAAR,kBAAuBH,MAAvB,GACD,CAED,mBACE,2BAAK,SAAS,CAAC,WAAf,eACE,oBAAC,SAAD,MADF,cAEE,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,OAAO,CAAE,iBAACN,CAAD,QAAKD,CAAAA,YAAY,CAACC,CAAD,CAAjB,EAAd,EACGT,QAAQ,CAACmB,GAAT,CAAa,SAAAC,CAAC,qBACb,oBAAC,QAAD,EACE,GAAG,CAAEA,CAAC,CAACJ,EADT,CAEE,SAAS,CAAII,CAAC,CAACC,SAFjB,CAGE,aAAa,CAAED,CAAC,CAACE,aAHnB,CAIE,SAAS,CAAIF,CAAC,CAACG,SAJjB,CAKE,YAAY,CAAIH,CAAC,CAACI,YALpB,CAME,SAAS,CAAIJ,CAAC,CAACK,SANjB,CAOE,UAAU,CAAIL,CAAC,CAACM,UAPlB,CAQE,QAAQ,CAAIN,CAAC,CAACO,QARhB,CASE,KAAK,CAAIP,CAAC,CAACQ,KATb,CAUE,EAAE,CAAIR,CAAC,CAACJ,EAVV,EADa,EAAd,CADH,CADF,KAFF,CADF,CA2BH,CAGD,cAAejB,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport SearchForm from \"../common/SearchForm\";\nimport A2Api from \"../api/a2api\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport PostCard from \"./PostCard\";\nimport { useHistory } from \"react-router-dom\";\nimport '../styles/PostsDisplay.css';\nimport TopBanner from \"../top-banner/TopBanner\";\n\nimport PostContext from \"./PostContext\";\n\nfunction PostsDisplay(){\n\n    // const [posts, setPosts] = useState(null);\n\n    const {allPosts,setAllPosts} = useContext(PostContext);\n\n    useEffect(function getPostsOnMount() {\n      search();\n    }, []);\n  \n    async function search(params) {\n      let posts = await A2Api.getPosts(params);\n      setAllPosts(posts);\n    }\n\n    const history = useHistory();\n\n    if (!allPosts) return <LoadingSpinner />;\n\n    function clickHandler(e){\n      let elem = e.target;\n      let maxJumps = 99;\n      while(elem.className != 'PostCard' && maxJumps > 0){\n        maxJumps--;\n        elem = elem.parentNode;\n      }\n      const postId = elem.id.slice(9);\n      history.push(`/posts/${postId}`);\n    }    \n\n    return (\n      <div className=\"main-view\">\n        <TopBanner/>\n        <div className=\"posts-display\">\n          <div onClick={(e)=>clickHandler(e)}>\n            {allPosts.map(p => (\n              <PostCard \n                key={p.id}\n                post_date = {p.post_date}\n                poster_handle={p.poster_handle}\n                post_body = {p.post_body}\n                post_subject = {p.post_subject}\n                post_tags = {p.post_tags}\n                admin_post = {p.admin_post}\n                reply_to = {p.reply_to}\n                image = {p.image}\n                id = {p.id}\n              />\n            ))}   \n          </div>;\n          \n        </div>\n\n      </div>\n\n\n    );\n}\n\n\nexport default PostsDisplay;\n"]},"metadata":{},"sourceType":"module"}