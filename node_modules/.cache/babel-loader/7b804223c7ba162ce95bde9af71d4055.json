{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/johnsaville/Desktop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"/Users/johnsaville/Desktop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/johnsaville/Desktop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import $ from'jquery';import TagList from'./TagList';////////////////////////////////////////////////////////////////////////////////////////////////////\nvar TagToggler=/*#__PURE__*/function(){function TagToggler(){_classCallCheck(this,TagToggler);}_createClass(TagToggler,null,[{key:\"getTags\",value:// constructor(tag){\n//     this._tag = tag.tag;\n//     this._DOM_class = 'tag';\n//     this._DOM_id = 'tag-'+tag.tag;\n//     this._toggles = ['tag excluded','tag','tag included'];\n//     this._searches = tag.searches || 0;\n// }\nfunction getTags(){var tags=$('.tag');return tags;}},{key:\"getPostCards\",value:function getPostCards(){var postCards=$('.PostCard');return postCards;}},{key:\"tagInclusion\",value:function tagInclusion(tagElement){return tagElement.className;}},{key:\"tag\",value:function tag(tagElement){return tagElement.innerHTML;}},{key:\"hasTag\",value:function hasTag(postCard,tagElement){var tags=postCard.querySelector('.pc-tags').innerHTML;var tagArray=tags.split(/\\W+/);return tagArray.includes(this.tag(tagElement));}},{key:\"toggle\",value:function toggle(tagElement){if(!this.isTagElement(tagElement))return;var currentClassName=tagElement.className;var currentIndex=this.toggles.indexOf(currentClassName);var next=currentIndex+1>2?0:currentIndex+1;var nextClassName=this.toggles[next];tagElement.className=nextClassName;this.displaySelected();}},{key:\"displaySelected\",value:function displaySelected(){$('.PostCard').show();var postCards=this.getPostCards();// console.log('postcards======================================',$('.PostCard'));\nvar excludedTags=$('.excluded');var includedTags=$('.included');var neutralTags=$('.neutral');var tags=$('.tag');// const neutralTags = [...tags];\n// console.log('exluded=========================',excludedTags);\n// console.log('included========================',includedTags);\n// console.log('tag=============================',tags);\nvar _iterator=_createForOfIteratorHelper(includedTags),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var tag=_step.value;var _iterator3=_createForOfIteratorHelper(postCards),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var postCard=_step3.value;if(!this.hasTag(postCard,tag))$(postCard).hide();else $(postCard).show();}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}}catch(err){_iterator.e(err);}finally{_iterator.f();}var _iterator2=_createForOfIteratorHelper(excludedTags),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _tag=_step2.value;var _iterator4=_createForOfIteratorHelper(postCards),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _postCard=_step4.value;if(!this.hasTag(_postCard,_tag))$(_postCard).show();else $(_postCard).hide();}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}}// for(let tag of neutralTags){\n//     for(let postCard of postCards){\n//         if( !this.hasTag(postCard,tag) )\n//             $(postCard).hide();\n//         else\n//             $(postCard).show();\n//     }\n// }\n}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}},{key:\"showAllPostCards\",value:function showAllPostCards(){$('.PostCard').show();}},{key:\"isTagElement\",value:function isTagElement(tagElement){return this.toggles.includes(tagElement.className);}},{key:\"shouldBeIncluded\",value:function shouldBeIncluded(tagElement){/**\n         * return  -1:exclude --tag\n         *          0:neutral --tag included\n         *          1:include --tag excluded\n         * from this._toggles (indexof - 1) this._DOM_class  \n         * for better readability and to simplify code\n         */return this.toggles.indexOf(tagElement.className)-1;}},{key:\"shouldHaveTag\",value:function shouldHaveTag(tagElement){return this.toggles.indexOf(tagElement.className)-1;}},{key:\"_hasTag\",value:function _hasTag(postCard,tagElement){var tags=postCard.querySelector('.pc-tags').innerHTML;var tagArray=tags.split(/\\W+/);return tagArray.includes(this.tag(tagElement))?1:-1;}},{key:\"shouldShow\",value:function shouldShow(tagElement,postCard){var threshold=arguments.length>2&&arguments[2]!==undefined?arguments[2]:-1;// const algo = this.hasTag(postCard,tagElement) * this.shouldHaveTag(tagElement);\n// console.log('algo=================================',algo);\n// console.log(`${this.tag(tagElement)} algo at: ${algo}`);\nvar back=true;if(this.shouldHaveTag(tagElement)===-1&&this.hasTag(postCard,tagElement)===1){back=false;}else if(this.shouldHaveTag(tagElement)===1&&this.hasTag(postCard,tagElement)===-1){back=false;}return back;}},{key:\"filterPostCards\",value:function filterPostCards(tagElement){this.showAllPostCards();var allPostCards=document.querySelectorAll('.PostCard');var _iterator5=_createForOfIteratorHelper(allPostCards),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var postCard=_step5.value;var shouldShow=this.shouldShow(tagElement,postCard);console.log(\"postcard \".concat(postCard.id,\" shouldShow?: \").concat(shouldShow));if(shouldShow)$(postCard).show();else $(postCard).hide();console.log(\"postcard \".concat(postCard.id,\" is showing?: \").concat($(postCard).is(':visible')));}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}}}]);return TagToggler;}();TagToggler._toggles=['tag excluded','tag','tag included'];TagToggler.toggles=['tag excluded','tag neutral','tag included'];;export default TagToggler;","map":{"version":3,"sources":["/Users/johnsaville/Desktop/frontend/src/tag-list/TagToggler.js"],"names":["$","TagList","TagToggler","tags","postCards","tagElement","className","innerHTML","postCard","querySelector","tagArray","split","includes","tag","isTagElement","currentClassName","currentIndex","toggles","indexOf","next","nextClassName","displaySelected","show","getPostCards","excludedTags","includedTags","neutralTags","hasTag","hide","threshold","back","shouldHaveTag","showAllPostCards","allPostCards","document","querySelectorAll","shouldShow","console","log","id","is","_toggles"],"mappings":"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","sourcesContent":["import $ from 'jquery';\nimport TagList from './TagList';\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass TagToggler{\n    // constructor(tag){\n    //     this._tag = tag.tag;\n    //     this._DOM_class = 'tag';\n    //     this._DOM_id = 'tag-'+tag.tag;\n    //     this._toggles = ['tag excluded','tag','tag included'];\n    //     this._searches = tag.searches || 0;\n    // }\n\n    static _toggles = ['tag excluded','tag','tag included'];\n\n    static toggles = ['tag excluded','tag neutral','tag included'];\n\n\n    static getTags(){\n        const tags = $('.tag');\n        return tags;\n    }\n\n    static getPostCards(){\n        const postCards = $('.PostCard');\n        return postCards;\n    }\n\n    static tagInclusion(tagElement){\n        return tagElement.className;\n    }\n\n    static tag(tagElement){\n        return tagElement.innerHTML;\n    }\n\n    static hasTag(postCard,tagElement){\n        const tags = postCard.querySelector('.pc-tags').innerHTML;\n        const tagArray = tags.split(/\\W+/);\n        return tagArray.includes(this.tag(tagElement));\n    }\n\n    static toggle(tagElement){\n        if(!this.isTagElement(tagElement))return;\n        const currentClassName = tagElement.className;\n        const currentIndex = this.toggles.indexOf(currentClassName);\n        const next = currentIndex + 1 > 2 ? 0 : currentIndex + 1;\n        const nextClassName = this.toggles[next];\n        tagElement.className = nextClassName;\n        this.displaySelected();\n    }\n\n    static displaySelected(){\n        $('.PostCard').show();\n        const postCards = this.getPostCards();\n\n        // console.log('postcards======================================',$('.PostCard'));\n\n        const excludedTags = $('.excluded');\n        const includedTags = $('.included');\n        const neutralTags =  $('.neutral');\n\n        const tags = $('.tag');\n\n        // const neutralTags = [...tags];\n\n        // console.log('exluded=========================',excludedTags);\n        // console.log('included========================',includedTags);\n        // console.log('tag=============================',tags);\n\n\n\n        for(let tag of includedTags){\n\n            for(let postCard of postCards){\n\n                if( !this.hasTag(postCard,tag) )\n                    $(postCard).hide();\n                else\n                    $(postCard).show();\n\n            }\n        }\n\n        for(let tag of excludedTags){\n            for(let postCard of postCards){\n                \n                if( !this.hasTag(postCard,tag) )\n                    $(postCard).show();\n                else\n                    $(postCard).hide();\n\n            }\n        }\n\n        // for(let tag of neutralTags){\n\n        //     for(let postCard of postCards){\n\n        //         if( !this.hasTag(postCard,tag) )\n        //             $(postCard).hide();\n        //         else\n        //             $(postCard).show();\n\n        //     }\n\n        // }\n    }\n\n    static showAllPostCards(){\n        $('.PostCard').show();\n    }\n\n    static isTagElement(tagElement){\n        return this.toggles.includes(tagElement.className);\n    }\n\n\n    static shouldBeIncluded(tagElement){\n        /**\n         * return  -1:exclude --tag\n         *          0:neutral --tag included\n         *          1:include --tag excluded\n         * from this._toggles (indexof - 1) this._DOM_class  \n         * for better readability and to simplify code\n         */\n        return this.toggles.indexOf(tagElement.className) - 1;\n    }\n\n    static shouldHaveTag(tagElement){\n        return this.toggles.indexOf(tagElement.className) - 1;\n    }\n    static _hasTag(postCard,tagElement){\n        const tags = postCard.querySelector('.pc-tags').innerHTML;\n        const tagArray = tags.split(/\\W+/);\n        return tagArray.includes(this.tag(tagElement)) ? 1 : -1;\n    }\n\n    static shouldShow(tagElement,postCard, threshold = -1){\n        // const algo = this.hasTag(postCard,tagElement) * this.shouldHaveTag(tagElement);\n        // console.log('algo=================================',algo);\n        // console.log(`${this.tag(tagElement)} algo at: ${algo}`);\n        let back = true;\n        if((this.shouldHaveTag(tagElement) === -1) && this.hasTag(postCard,tagElement) === 1){\n            back = false;\n        } else \n        if((this.shouldHaveTag(tagElement)) === 1 && this.hasTag(postCard,tagElement) === -1){\n            back = false;\n        } \n        return back;     \n    }\n\n\n\n    static filterPostCards(tagElement){\n        this.showAllPostCards();\n        const allPostCards = document.querySelectorAll('.PostCard');\n        for(let postCard of allPostCards){\n\n            const shouldShow = this.shouldShow(tagElement,postCard);\n\n            console.log(`postcard ${postCard.id} shouldShow?: ${shouldShow}`);\n\n            if(shouldShow)\n                $(postCard).show();\n            else\n                $(postCard).hide();\n\n            console.log(`postcard ${postCard.id} is showing?: ${$(postCard).is(':visible')}`);\n\n        }\n    }\n};\n\nexport default TagToggler;"]},"metadata":{},"sourceType":"module"}