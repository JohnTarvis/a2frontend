{"version":3,"sources":["resources/images/picunrel.jpeg","../node_modules/express/lib sync","hooks/useLocalStorage.js","auth/AnonContext.js","common/ColoredLine.js","routes-nav/Navigation.js","common/LoadingSpinner.js","posts/PostContext.js","tag-list/TagToggler.js","api/a2api.js","tag-list/TagList.js","posts/PostCard.js","top-banner/TopBanner.js","posts/PostsDisplay.js","landingpage/Landingpage.js","common/Alert.js","auth/LoginForm.js","auth/RegistrationForm.js","posts/NewPostForm.js","posts/Post.js","routes-nav/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","useLocalStorage","key","firstValue","initialValue","localStorage","getItem","useState","item","setItem","useEffect","console","debug","removeItem","AnonContext","React","createContext","ColoredLine","color","style","backgroundColor","height","Navigation","logout","anon","useContext","className","to","onClick","first_name","anonname","LoadingSpinner","PostContext","TagToggler","$","tagElement","innerHTML","postCard","querySelector","split","includes","this","tag","isTagElement","currentClassName","currentIndex","toggles","indexOf","next","nextClassName","displaySelected","show","postCards","getPostCards","excludedTags","includedTags","hasTag","hide","back","shouldHaveTag","showAllPostCards","allPostCards","document","querySelectorAll","shouldShow","log","is","app","require","cors","use","response","A2Api","endpoint","data","method","url","headers","Authorization","token","params","axios","error","message","Array","isArray","request","res","posts","handle","TagList","allPosts","setAllPosts","allTags","setAllTags","setTagsIncluded","a","getTags","result","tags","sort","b","sorted","displayTaggedClient","target","toggle","clickedTag","search","window","outerHeight","clickHandler","map","p","PostCard","props","src","alt","post_subject","poster_handle","post_date","post_tags","admin_post","reply_to","TopBanner","PostsDisplay","getPosts","history","useHistory","elem","maxJumps","parentNode","postId","slice","push","post_body","image","Landingpage","getAllPosts","Provider","value","Alert","type","messages","role","LoginForm","login","password","formData","setFormData","formErrors","setFormErrors","handleSubmit","evt","preventDefault","loginResult","success","errors","handleChange","name","l","onSubmit","onChange","autoComplete","required","length","RegistrationForm","register","confirmPassword","securityQuestion","securityAnswer","generateRandomTags","number","size","count","val","Math","floor","random","NewPostForm","createPost","date","Date","selectedFile","file","setSelectedFile","rows","cols","files","Post","useParams","post","setPost","Routes","exact","path","App","setAnon","setToken","loaded","setLoaded","registerData","createTags","tagString","createTag","postData","loginData","jwt","decode","getAnon","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0b4c0732.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picunrel.998da47a.jpeg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 297;","import { useState, useEffect } from \"react\";\n\nfunction useLocalStorage(key, firstValue = null) {\n  const initialValue = localStorage.getItem(key) || firstValue;\n\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(function setKeyInLocalStorage() {\n    console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\n\n    if (item === null) {\n      localStorage.removeItem(key);\n    } else {\n      localStorage.setItem(key, item);\n    }\n  }, [key, item]);\n\n  return [item, setItem];\n}\n\nexport default useLocalStorage;\n","import React from \"react\";\n\n/** Context: provides user object and setter for it throughout app. */\n\nconst AnonContext = React.createContext();\n\nexport default AnonContext;\n","import React from \"react\";\n\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 1\n        }}\n    />\n);\n\nexport default ColoredLine;\n","import React, { useContext } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport AnonContext from \"../auth/AnonContext\";\nimport '../styles/Navigation.css';\nimport ColoredLine from \"../common/ColoredLine\";\n\n\n\nfunction Navigation({ logout }) {\n  const { anon } = useContext(AnonContext);\n  // console.debug(\"Navigation\", \"anon=\", anon);\n\n  function loggedInNav() {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/new-post\">\n              Create Post\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/profile\">\n              Profile\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/\" onClick={logout}>\n              Log out {anon.first_name || anon.anonname}\n            </Link>\n          </li>\n        </ul>\n    );\n  }\n\n  function loggedOutNav() {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/new-post\">\n              Create Post\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/login\">\n              Login\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/register\">\n              Register\n            </NavLink>\n          </li>\n        </ul>\n    );\n  }\n\n  return (\n    <div className='navbar-extra'>\n      <nav className=\"Navigation navbar navbar-expand-md\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          A2\n        </Link>\n        {anon ? loggedInNav() : loggedOutNav()}\n      </nav>\n      {/* <ColoredLine color=\"white\"/> */}\n    </div>\n  );\n}\n\nexport default Navigation;\n\n","import React from \"react\";\n\nimport \"./LoadingSpinner.css\";\n\nimport '../styles/LoadingSpinner.css';\n\nfunction LoadingSpinner() {\n  return (\n      <div className=\"LoadingSpinner\">\n        Loading ...\n      </div>\n  );\n}\n\nexport default LoadingSpinner;","import React from \"react\";\nconst PostContext = React.createContext();\nexport default PostContext;","import $ from 'jquery';\nimport TagList from './TagList';\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass TagToggler{\n\n    static toggles = ['tag excluded','tag neutral','tag included'];\n\n    static getTags(){\n        const tags = $('.tag');\n        return tags;\n    }\n\n    static getPostCards(){\n        const postCards = $('.PostCard');\n        return postCards;\n    }\n\n    static tagInclusion(tagElement){\n        return tagElement.className;\n    }\n\n    static tag(tagElement){\n        return tagElement.innerHTML;\n    }\n\n    static hasTag(postCard,tagElement){\n        const tags = postCard.querySelector('.pc-tags').innerHTML;\n        const tagArray = tags.split(/\\W+/);\n        return tagArray.includes(this.tag(tagElement));\n    }\n\n    static toggle(tagElement){\n        if(!this.isTagElement(tagElement))return;\n        const currentClassName = tagElement.className;\n        const currentIndex = this.toggles.indexOf(currentClassName);\n        const next = currentIndex + 1 > 2 ? 0 : currentIndex + 1;\n        const nextClassName = this.toggles[next];\n        tagElement.className = nextClassName;\n        this.displaySelected();\n    }\n\n    static displaySelected(){\n        $('.PostCard').show();\n        const postCards = this.getPostCards();\n\n        // console.log('postcards======================================',$('.PostCard'));\n\n        const excludedTags = $('.excluded');\n        const includedTags = $('.included');\n        const neutralTags =  $('.neutral');\n\n        const tags = $('.tag');\n\n        // const neutralTags = [...tags];\n\n        // console.log('exluded=========================',excludedTags);\n        // console.log('included========================',includedTags);\n        // console.log('tag=============================',tags);\n\n\n\n        for(let tag of includedTags){\n\n            for(let postCard of postCards){\n\n                if( !this.hasTag(postCard,tag) )\n                    $(postCard).hide();\n                else\n                    $(postCard).show();\n\n            }\n        }\n\n        for(let tag of excludedTags){\n            for(let postCard of postCards){\n                \n                if( !this.hasTag(postCard,tag) )\n                    $(postCard).show();\n                else\n                    $(postCard).hide();\n\n            }\n        }\n\n\n    }\n\n    static showAllPostCards(){\n        $('.PostCard').show();\n    }\n\n    static isTagElement(tagElement){\n        return this.toggles.includes(tagElement.className);\n    }\n\n\n    static shouldBeIncluded(tagElement){\n        /**\n         * return  -1:exclude --tag\n         *          0:neutral --tag included\n         *          1:include --tag excluded\n         * from this._toggles (indexof - 1) this._DOM_class  \n         * for better readability and to simplify code\n         */\n        return this.toggles.indexOf(tagElement.className) - 1;\n    }\n\n    static shouldHaveTag(tagElement){\n        return this.toggles.indexOf(tagElement.className) - 1;\n    }\n    static _hasTag(postCard,tagElement){\n        const tags = postCard.querySelector('.pc-tags').innerHTML;\n        const tagArray = tags.split(/\\W+/);\n        return tagArray.includes(this.tag(tagElement)) ? 1 : -1;\n    }\n\n    static shouldShow(tagElement,postCard, threshold = -1){\n        // const algo = this.hasTag(postCard,tagElement) * this.shouldHaveTag(tagElement);\n        // console.log('algo=================================',algo);\n        // console.log(`${this.tag(tagElement)} algo at: ${algo}`);\n        let back = true;\n        if((this.shouldHaveTag(tagElement) === -1) && this.hasTag(postCard,tagElement) === 1){\n            back = false;\n        } else \n        if((this.shouldHaveTag(tagElement)) === 1 && this.hasTag(postCard,tagElement) === -1){\n            back = false;\n        } \n        return back;     \n    }\n\n\n\n    static filterPostCards(tagElement){\n        this.showAllPostCards();\n        const allPostCards = document.querySelectorAll('.PostCard');\n        for(let postCard of allPostCards){\n\n            const shouldShow = this.shouldShow(tagElement,postCard);\n\n            console.log(`postcard ${postCard.id} shouldShow?: ${shouldShow}`);\n\n            if(shouldShow)\n                $(postCard).show();\n            else\n                $(postCard).hide();\n\n            console.log(`postcard ${postCard.id} is showing?: ${$(postCard).is(':visible')}`);\n\n        }\n    }\n};\n\nexport default TagToggler;","import axios from \"axios\";\n\nimport { response } from 'express';\n\nconst app = require('express');\nconst cors = require('cors');\n\n\napp.use(response);\n\n\napp.use(cors);\n\n\nconst BASE_URL = 'https://damp-island-15072.herokuapp.com';//\"http://localhost:3001\";\nclass A2Api {\n  static token;\n  static async request(endpoint, data = {}, method = \"get\") {\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { \n      Authorization: `Bearer ${A2Api.token}`,\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n    };\n    const params = (method === \"get\")\n        ? data\n        : {};\n    try {\n      // console.log('toaxios=========================================',{url,method,data,params,headers});\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n////////////////////////////////////////////////////////////////////////////////-posts\n//-add delete post\n\n  static async getPosts(params){\n    let res = await this.request(`post/`,params);\n    return res.posts;\n  }\n  static async createPost(params){\n    let res = await this.request('post/',params,'post');\n    return res.posts;\n  }\n  static async deleteAllPosts(){\n    await this.request('post/',{},'delete');\n  }\n\n////////////////////////////////////////////////////////////////////////////////-anons\n\n  static async getAnon(handle) {\n    let res = await this.request(`anon/${handle}`);\n    return res.anon;\n  }\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  static async register(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n  static async saveProfile(handle, data) {\n    let res = await this.request(`anon/${handle}`, data, \"patch\");\n    return res.anon;\n  }\n\n  static async deleteAllAnons(){\n    await this.request('anon/',{},'delete');\n  }\n\n ////////////////////////////////////////////////////////////////////////////////-tags\n\n  static async getTags(tag){\n    let res = await this.request(`tag/`,{tag});\n    return res;\n  }\n\n  static async createTag(tag){\n    let res = await this.request('tag/',{tag},'post');\n  }\n\n  static async deleteAllTags(){\n    await this.request('tag/',{},'delete');\n  }\n\n\n}\n\n\nexport default A2Api;\n\n","import React, { useState, useEffect, useContext } from \"react\";\nimport '../styles/TagList.css';\nimport ColoredLine from '../common/ColoredLine';\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\nimport PostContext from \"../posts/PostContext\";\n\nimport $ from 'jquery';\n\nimport TagToggler from \"./TagToggler\";\n\nimport A2api2 from \"../api/a2api2\";\nimport A2Api from \"../api/a2api\";\n\n\nfunction TagList(){\n\n    const {allPosts,setAllPosts} = useContext(PostContext);\n    const [allTags, setAllTags] = useState(null);\n    const [tagsIncluded,setTagsIncluded] = useState(null);\n    const [tagsExcluded,setTagsExcluded] = useState(null);\n\n    // const [toggleTags,setToggleTags] = useState(null);\n\n    // const [tagsInfo,setTagsInfo] = useState(null);\n\n    const tagIncluded = 'tag-included';\n    const tagExcluded = 'tag-excluded';\n\n    useEffect(function getTagsOnMount() {\n      search();\n    }, []);\n  \n    async function search(params) {\n        // console.log('PARAMS IN TAGLIST ',params);\n        let result = await A2Api.getTags(params);\n        result.tags.sort((a,b)=>{\n            return a.tag > b.tag ? 1 : -1;\n        });\n        const sorted = result.tags;\n        setAllTags(sorted);\n        setTagsIncluded(sorted);\n    }\n\n    function getAllPostCards(){\n        return document.querySelectorAll('.PostCard');\n    }\n\n    function displayTaggedClient(e){\n        const target = e.target;\n        TagToggler.toggle(target);\n        if(target.className != 'tag')return;\n        const clickedTag = target.innerHTML;\n        const allPostCards = document.querySelectorAll('.PostCard');\n        for(let postCard of allPostCards){\n            const postCardId = postCard.id;\n            const tags = postCard.querySelector('.pc-tags').innerHTML;\n            const tagArray = tags.split(/\\W+/);\n            if(!tagArray.includes(clickedTag)){\n                $(postCard).hide();\n            }                        \n        }\n    }\n\n    ///======================================================================TESTING\n    async function clickHandler(e){\n        if(e.target.id==='test-click'){\n            // await A2Api.deleteAllPosts();\n            // await A2Api.deleteAllTags();\n            \n            \n        }\n        displayTaggedClient(e);\n    }\n    /////////////////////////////////////////////////////////////////////////////////\n\n\n    if (!allTags) return <LoadingSpinner />;\n\n    return <div className='tag-list' style={{\n        height: window.outerHeight \n        }} onClick={(e)=>clickHandler(e)}>\n\n            <h3 id=\"test-click\">Popular Tags</h3>\n            <ColoredLine color=\"white\"/>\n\n            {allTags.map(p => (\n                <div className=\"tag neutral\" key={p.id} id={'tag-'+p.tag}>\n                    {p.tag}\n                </div>\n            ))} \n\n    </div>\n}\n\nexport default TagList;\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport picunrel from \"../resources/images/picunrel.jpeg\";\n\nimport ColoredLine from \"../common/ColoredLine\";\n\nimport '../styles/PostCard.css';\n\n\nfunction PostCard(props) {\n    const punrel = 'https://a2uploads.s3.us-west-1.amazonaws.com/unrelated.jpg';\n    return (\n            <div className=\"PostCard\" id={`postcard-${props.id}` }>\n\n                <div>\n                    <img src={punrel} alt='' className=\"post-image-preview\" />\n                </div>\n                <ColoredLine color=\"white\"/>\n\n                <div className=\"image-subject\">\n                    {props.post_subject}\n                </div>\n\n                <ColoredLine color=\"white\"/>\n\n                <small>\n                    <div className='centered'>\n                        posted by : {props.poster_handle}\n                    </div>\n\n                    <div className='centered'>\n                        posted at: {props.post_date}\n                    </div>\n\n                    <div className='centered pc-tags'>\n                        tags : {props.post_tags}\n                    </div>\n                </small>\n\n                <div>\n                    {props.admin_post}\n                </div>\n\n                <div>\n                    {props.reply_to}\n                </div>\n            </div>\n    );\n}\n\nexport default PostCard;\n","import React from \"react\";\nimport '../styles/TopBanner.css';\n\n// import untitled from \"../resources/images/untitled.jpg\";\n\nfunction TopBanner() {\n    return (\n        <div className=\"top-banner\">\n            <div className=\"container text-center\">\n                <h1 className=\"mb-4 font-weight-bold\">Anons Anonymous</h1>\n                <p className=\"lead\">anti-social networking</p>\n            </div>\n        </div>\n    );\n  }\n  \n  export default TopBanner;","import React, { useState, useEffect, useContext } from \"react\";\nimport SearchForm from \"../common/SearchForm\";\nimport A2Api from \"../api/a2api\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport PostCard from \"./PostCard\";\nimport { useHistory } from \"react-router-dom\";\nimport '../styles/PostsDisplay.css';\nimport TopBanner from \"../top-banner/TopBanner\";\n\nimport PostContext from \"./PostContext\";\n\nimport A2api2 from \"../api/a2api2\";\n\n\nfunction PostsDisplay(){\n\n    // const [posts, setPosts] = useState(null);\n\n    const {allPosts,setAllPosts} = useContext(PostContext);\n\n    useEffect(function getPostsOnMount() {\n      search();\n    }, []);\n  \n    async function search(params) {\n      let posts = await A2Api.getPosts(params);\n      setAllPosts(posts);\n    }\n\n    const history = useHistory();\n\n    if (!allPosts) return <LoadingSpinner />;\n\n    function clickHandler(e){\n      let elem = e.target;\n      let maxJumps = 99;\n      while(elem.className != 'PostCard' && maxJumps > 0){\n        maxJumps--;\n        elem = elem.parentNode;\n      }\n      const postId = elem.id.slice(9);\n      history.push(`/posts/${postId}`);\n    }    \n\n    return (\n      <div className=\"main-view\">\n        <TopBanner/>\n        <div className=\"posts-display\">\n          <div onClick={(e)=>clickHandler(e)}>\n            {allPosts.map(p => (\n              <PostCard \n                key={p.id}\n                post_date = {p.post_date}\n                poster_handle={p.poster_handle}\n                post_body = {p.post_body}\n                post_subject = {p.post_subject}\n                post_tags = {p.post_tags}\n                admin_post = {p.admin_post}\n                reply_to = {p.reply_to}\n                image = {p.image}\n                id = {p.id}\n              />\n            ))}   \n          </div>;\n          \n        </div>\n\n      </div>\n\n\n    );\n}\n\n\nexport default PostsDisplay;\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../styles/Landingpage.css';\nimport AnonContext from \"../auth/AnonContext\";\nimport { useHistory } from \"react-router-dom\";\nimport TagList from '../tag-list/TagList';\nimport PostsDisplay from \"../posts/PostsDisplay\";\nimport '../styles/Landingpage.css';\n\nimport PostContext from \"../posts/PostContext\";\n\nfunction Landingpage({getAllPosts}) {\n\n  const { anon } = useContext(AnonContext);\n\n  const history  = useHistory();\n  const [allPosts,setAllPosts] = useState(null);\n  return ( \n    <div>\n      <div className=\"Landingpage\">\n        <PostContext.Provider value={{allPosts,setAllPosts}}>\n          <TagList/>\n          <div className=\"PostsDisplay-container\">\n            <div>\n              <PostsDisplay getAllPosts={getAllPosts}/>\n            </div>\n          </div>\n        </PostContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default Landingpage;\n\n\n","import React from \"react\";\n\nfunction Alert({ type = \"danger\", messages = [] }) {\n  console.debug(\"Alert\", \"type=\", type, \"messages=\", messages);\n\n  return (\n      <div className={`alert alert-${type}`} role=\"alert\">\n        {messages.map(error => (\n            <p className=\"mb-0 small\" key={error}>\n              {error}\n            </p>\n        ))}\n      </div>\n  );\n}\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\n\nfunction LoginForm({ login }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    handle: \"\",\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  console.debug(\n      \"LoginForm\",\n      \"login=\", typeof login,\n      \"formData=\", formData,\n      \"formErrors\", formErrors,\n  );\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let loginResult = await login(formData);\n    console.log('loginResult= ',loginResult);\n    if (loginResult.success) {\n      history.push(\"/\");\n    } else {\n      setFormErrors(loginResult.errors);\n    }\n  }\n  \n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(l => ({ ...l, [name]: value }));\n  }\n\n  return (\n      <div className=\"LoginForm\">\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n          <h3 className=\"mb-3\">Log In</h3>\n\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label>Handle</label>\n                  <input\n                      name=\"handle\"\n                      className=\"form-control\"\n                      value={formData.handle}\n                      onChange={handleChange}\n                      autoComplete=\"handle\"\n                      required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"password\"\n                      className=\"form-control\"\n                      value={formData.password}\n                      onChange={handleChange}\n                      autoComplete=\"current-password\"\n                      required\n                  />\n                </div>\n\n                {formErrors.length\n                    ? <Alert type=\"danger\" messages={formErrors} />\n                    : null}\n\n                <button\n                    className=\"btn btn-primary float-right\"\n                    onSubmit={handleSubmit}\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\n\nfunction randomAnon(){\n  return `Anonymous${Math.floor(Math.random() * 999999)}`;\n}\n\nfunction RegistrationForm({ register }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    handle: \"john\",\n    password: \"password\",\n    confirmPassword:\"password\",\n    securityQuestion:\"password\",\n    securityAnswer:\"password\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  console.debug(\n      \"RegistrationForm\",\n      \"register=\", typeof register,\n      \"formData=\", formData,\n      \"formErrors=\", formErrors,\n  );\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let result = await register(formData);\n    if (result.success) {\n      history.push(\"/\");\n    } else {\n      setFormErrors(result.errors);\n    }\n  }\n  \n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(data => ({ ...data, [name]: value }));\n  }\n\n  return (\n      <div className=\"RegistrationForm\">\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n          <h2 className=\"mb-3\">Create Account</h2>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label>Handle</label>\n                  <input\n                      name=\"handle\"\n                      className=\"form-control\"\n                      value={formData.handle}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"password\"\n                      className=\"form-control\"\n                      value={formData.password}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Confirm Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"confirmPassword\"\n                      className=\"form-control\"\n                      value={formData.confirmPassword}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Security Question ( for account recovery )</label>\n                  <input\n                      name=\"securityQuestion\"\n                      className=\"form-control\"\n                      value={formData.securityQuestion}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Answer</label>\n                  <input\n                      name=\"securityAnswer\"\n                      className=\"form-control\"\n                      value={formData.securityAnswer}\n                      onChange={handleChange}\n                  />\n                </div>\n\n                {formErrors.length\n                    ? <Alert type=\"danger\" messages={formErrors} />\n                    : null\n                }\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary float-right\"\n                    onSubmit={handleSubmit}\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default RegistrationForm;","import React, { useState,useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\n\nimport AnonContext from \"../auth/AnonContext\";\n\n////////////////////////////////////////////////////////////////////////////////////////GENERATE RANDOM TAGS\n\nfunction generateRandomTags(number = 3, size=10){\n  let back = '';\n  const tags = [];\n  for(let count = 0; count < number; count++){\n    let val = Math.floor(Math.random()*size);\n    while(tags.includes(val)){\n      val = Math.floor(Math.random()*size);\n    }\n    tags.push(val);\n  }\n  for(let count = 0; count < number; count++){\n    back += `Tag${tags[count]} `;\n  }\n  return back;\n}\n\nfunction NewPostForm({ createPost }) {\n  const { anon } = useContext(AnonContext);\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    post_subject: \"subject\",\n    post_body: \"blah blah blah\",\n    post_tags: generateRandomTags()\n  });\n  const [formErrors, setFormErrors] = useState([]);\n  console.debug(\n      \"NewPostForm\",\n      \"createPost=\", typeof createPost,\n      \"formData=\", formData,\n      \"formErrors=\", formErrors,\n  );\n\n////////////////////////////////////////////////////////////////////////////////////////HANDLE SUBMIT\n\n  // const BASE_URL = 'https://damp-island-15072.herokuapp.com';\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    const date = new Date();\n    formData.post_date = date;\n\n    formData.image = selectedFile.name;\n    formData.file = selectedFile;\n\n///////////////////////////////////////////////////////////////////////////\n\n    // console.log(\"file data ====>\", selectedFile);\n\n    // const data = new FormData();\n    // data.append(\"image\", selectedFile); // image key to use in Postman\n\n    // const server = BASE_URL;\n\n    // fetch(`${server}/single`, {\n    //   method: \"POST\",\n    //   body: data,\n    // })\n    //   .then((result) => {\n    //     console.log(\"File sent successfully\", result);\n    //   })\n    //   .catch((err) => {\n    //     console.log(\"Something Went Wrong\", err);\n    //   });\n\n////////////////////////////////////////////////////////////////////////////////////////CREATE POST\n\n    let result = await createPost(formData);\n    \n    if (result.success) {\n      history.push(\"/\");\n    } else {\n      setFormErrors(result.errors);\n    }\n\n  };\n\n////////////////////////////////////////////////////////////////////////////////////////HANDLE CHANGE\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(data => ({ ...data, [name]: value }));\n  }\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  return (\n      <div className=\"NewPostForm\">\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n          <h2 className=\"mb-3 text-primary\">New Thread</h2>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label>Subject</label>\n                  <input\n                    name=\"post_subject\"\n                    className=\"form-control\"\n                    value={formData.post_subject}\n                    onChange={handleChange}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Body</label>\n                  <textarea rows=\"10\" cols=\"10\" \n                    name=\"post_body\"\n                    className=\"form-control\"\n                    value={formData.post_body}\n                    onChange={handleChange}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Tags</label>\n                  <input\n                    name=\"post_tags\"\n                    className=\"form-control\"\n                    value={formData.post_tags}\n                    onChange={handleChange}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Upload File</label>\n                  <input \n                    type=\"file\" \n                    name=\"image\"\n                    value={formData.image}\n                    onChange={(e) => setSelectedFile(e.target.files[0])}\n                  />\n                </div>\n\n                {formErrors.length\n                    ? <Alert type=\"danger\" messages={formErrors} />\n                    : null\n                }\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary float-right\"\n                    onSubmit={handleSubmit}\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default NewPostForm;","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport ColoredLine from \"../common/ColoredLine\";\n\nimport A2api2 from \"../api/a2api2\";\nimport A2Api from \"../api/a2api\";\n\nimport '../styles/Post.css';\n\nimport picunrel from \"../resources/images/picunrel.jpeg\";\n\n\n\nfunction Post() {\n\n    const {id} = useParams();\n\n    const [post, setPost] = useState(null);\n    useEffect(function getPostsOnMount() {\n        search();\n    }, []);\n  \n    async function search() {\n        let result = await A2Api.getPosts({id:id});\n        setPost(result);\n    }\n\n    if (!post) return <LoadingSpinner />;\n\n    const punrel = 'https://a2uploads.s3.us-west-1.amazonaws.com/unrelated.jpg';\n\n    return <div className=\"post-page\">\n\n                <div className=\"Post\" id={`Post-${post[0].id}` }>\n                    <div className=\"image-subject\">\n                        {post.post_subject}\n                    </div>\n\n                    <ColoredLine color=\"white\"/>\n\n                    <div>\n                        <img src={punrel} alt='' className=\"post-image-preview\" />\n                    </div>\n\n                    <ColoredLine color=\"white\"/>\n\n                    <div>\n                        {post[0].post_body}\n                    </div>\n\n                    <ColoredLine color=\"white\"/>\n\n                    <small>\n                        <div className='centered'>\n                            posted by : {post[0].poster_handle}\n                        </div>\n\n                        <div className='centered'>\n                            posted at: {post[0].post_date}\n                        </div>\n\n                        <div className='centered'>\n                            tags : {post[0].post_tags}\n                        </div>\n                    </small>\n\n                    <div>\n                        {post[0].admin_post}\n                    </div>\n\n                    <div>\n                        {post[0].reply_to}\n                    </div>\n                </div>\n\n            </div>\n                \n    \n}\n\nexport default Post;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Landingpage from \"../landingpage/Landingpage\";\nimport LoginForm from \"../auth/LoginForm\";\nimport RegistrationForm from \"../auth/RegistrationForm\";\nimport NewPostForm from \"../posts/NewPostForm\";\nimport PostsDisplay from \"../posts/PostsDisplay\";\nimport Post from \"../posts/Post\";\n\nfunction Routes({ login, register, createPost, getAllPosts }) {\n  // console.debug(\n  //     \"Routes\",\n  //     `login=${typeof login}`,\n  //     `register=${typeof register}`,\n  // );\n\n  \n  return (\n      <div className=\"pt-5\">\n        <Switch>\n\n          <Route exact path=\"/\">\n            <Landingpage getAllPosts={getAllPosts}/>\n          </Route>\n\n          <Route exact path=\"/login\">\n            <LoginForm login={login} />\n          </Route>\n\n          <Route exact path=\"/register\">\n            <RegistrationForm register={register}/>\n          </Route>\n\n          <Route exact path=\"/new-post\">\n            <NewPostForm createPost={createPost}/>\n          </Route>\n\n          <Route exact path=\"/posts\">\n            <PostsDisplay />\n          </Route>\n\n          <Route exact path=\"/posts/:id\">\n            <Post />\n          </Route>\n          \n\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n  );\n}\n\nexport default Routes;\n\n\n","import { response } from 'express';\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport Navigation from \"./routes-nav/Navigation\";\nimport Routes from \"./routes-nav/Routes\";\nimport LoadingSpinner from \"./common/LoadingSpinner\";\nimport AnonContext from \"./auth/AnonContext\";\nimport jwt from \"jsonwebtoken\";\n\nimport A2Api from \"./api/a2api\";\n\nexport const A2_TOKEN = \"anonanon-token\";\n\nfunction App() {\n  \n  const [anon, setAnon] = useState(null);\n  const [token, setToken] = useLocalStorage(A2_TOKEN);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(function loadanonInfo() {\n\n    async function getAnon() {\n      if (token) {\n        try {\n          let { handle } = jwt.decode(token);\n          A2Api.token = token;\n          let anon = await A2Api.getAnon(handle);\n          setAnon(anon);\n        } catch (err) {\n          console.error(\"App loadanonInfo: problem loading\", err);\n          setAnon(null);\n        }\n      }\n      setLoaded(true);\n    }\n    setLoaded(false);\n    getAnon();\n  }, [token]);\n/////////////////////////////////////////////////////////////////////////LOGIN\n  function logout() {\n    setAnon(null);\n    setToken(null);\n  }\n/////////////////////////////////////////////////////////////////////////REGISTER\n  async function register(registerData) {\n    try {\n      let token = await A2Api.register(registerData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"register failed\", errors);\n      return { success: false, errors };\n    }\n  }\n/////////////////////////////////////////////////////////////////////////CREATE TAGS\n  async function createTags(tagString){\n    const tags = tagString.split(/\\W+/);\n    for(let tag of tags){\n      try{\n        await A2Api.createTag(tag);\n      } catch(errors){\n        console.log('failed to create tag: ',tag);\n        console.log('errors ',errors);\n      }\n    } \n  }\n/////////////////////////////////////////////////////////////////////////CREATE POST\n  async function createPost(postData){\n    try {\n      postData.poster_handle = anon.handle || 'anonymous';\n\n      await A2Api.createPost(postData);\n      await createTags(postData.post_tags);\n\n      // await Awsapi(postData.post_image);\n\n      return { success: true };\n    } catch (errors) {\n      console.error(\"create post failed\", errors);\n      return { success: false, errors };\n    }\n  }\n/////////////////////////////////////////////////////////////////////////LOGIN\n  async function login(loginData) {\n    console.log('login');\n    try {\n      let token = await A2Api.login(loginData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  if (!loaded) return <LoadingSpinner />;\n\n  return (\n      <BrowserRouter>\n        <AnonContext.Provider value={{ anon, setAnon}}>\n          <div className=\"App\">\n            <Navigation logout={logout} />\n            <Routes login={login} \n                    register={register} \n                    createPost={createPost} />\n          </div>\n        </AnonContext.Provider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === \"installed\") {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    \"New content is available and will be used when all \" +\n                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log(\"Content is cached for offline use.\");\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error(\"Error during service worker registration:\", error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get(\"content-type\");\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf(\"javascript\") === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            \"No internet connection found. App is running in offline mode.\",\n        );\n      });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport './styles/index.css';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}