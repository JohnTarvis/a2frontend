{"version":3,"sources":["hooks/useLocalStorage.js","auth/AnonContext.js","common/ColoredLine.js","routes-nav/Navigation.js","api/a2api.js","common/LoadingSpinner.js","posts/PostContext.js","tag-list/TagToggler.js","tag-list/TagList.js","common/SearchForm.js","posts/PostCard.js","top-banner/TopBanner.js","posts/PostsDisplay.js","landingpage/Landingpage.js","common/Alert.js","auth/LoginForm.js","auth/RegistrationForm.js","posts/NewPostForm.js","posts/Post.js","routes-nav/Routes.js","App.js","serviceWorker.js","index.js","resources/images/picunrel.jpeg"],"names":["useLocalStorage","key","firstValue","initialValue","localStorage","getItem","useState","item","setItem","useEffect","console","debug","removeItem","AnonContext","React","createContext","ColoredLine","color","style","backgroundColor","height","Navigation","logout","anon","useContext","className","to","onClick","first_name","anonname","A2Api","endpoint","data","method","url","headers","Authorization","token","params","axios","error","response","message","Array","isArray","this","request","res","posts","handle","tag","LoadingSpinner","PostContext","TagToggler","$","tagElement","innerHTML","postCard","querySelector","split","includes","isTagElement","currentClassName","currentIndex","toggles","indexOf","next","nextClassName","displaySelected","show","postCards","getPostCards","excludedTags","includedTags","hasTag","hide","back","shouldHaveTag","showAllPostCards","allPostCards","document","querySelectorAll","shouldShow","log","id","is","_toggles","TagList","allPosts","setAllPosts","allTags","setAllTags","setTagsIncluded","a","getTags","result","tags","sort","b","sorted","clickHandler","e","target","toggle","clickedTag","displayTaggedClient","search","window","outerHeight","map","p","SearchForm","PostCard","props","post_subject","src","picunrel","alt","poster_handle","post_date","post_tags","admin_post","reply_to","TopBanner","PostsDisplay","getPosts","history","useHistory","elem","maxJumps","parentNode","postId","slice","push","post_body","image","Landingpage","getAllPosts","Provider","value","Alert","type","messages","role","LoginForm","login","password","formData","setFormData","formErrors","setFormErrors","handleSubmit","evt","preventDefault","loginResult","success","errors","handleChange","name","l","onSubmit","onChange","autoComplete","required","length","RegistrationForm","register","confirmPassword","securityQuestion","securityAnswer","generateRandomTags","number","size","count","val","Math","floor","random","NewPostForm","createPost","date","Date","rows","cols","Post","useParams","post","setPost","Routes","exact","path","App","setAnon","setToken","loaded","setLoaded","registerData","createTags","tagString","createTag","postData","loginData","jwt","decode","getAnon","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.a4baf2d9.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useLocalStorage(key, firstValue = null) {\n  const initialValue = localStorage.getItem(key) || firstValue;\n\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(function setKeyInLocalStorage() {\n    console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\n\n    if (item === null) {\n      localStorage.removeItem(key);\n    } else {\n      localStorage.setItem(key, item);\n    }\n  }, [key, item]);\n\n  return [item, setItem];\n}\n\nexport default useLocalStorage;\n","import React from \"react\";\n\n/** Context: provides user object and setter for it throughout app. */\n\nconst AnonContext = React.createContext();\n\nexport default AnonContext;\n","import React from \"react\";\n\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 1\n        }}\n    />\n);\n\nexport default ColoredLine;\n","import React, { useContext } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport AnonContext from \"../auth/AnonContext\";\nimport '../styles/Navigation.css';\nimport ColoredLine from \"../common/ColoredLine\";\n\n\n\nfunction Navigation({ logout }) {\n  const { anon } = useContext(AnonContext);\n  // console.debug(\"Navigation\", \"anon=\", anon);\n\n  function loggedInNav() {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/new-post\">\n              Create Post\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/profile\">\n              Profile\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/\" onClick={logout}>\n              Log out {anon.first_name || anon.anonname}\n            </Link>\n          </li>\n        </ul>\n    );\n  }\n\n  function loggedOutNav() {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/new-post\">\n              Create Post\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/login\">\n              Login\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/register\">\n              Register\n            </NavLink>\n          </li>\n        </ul>\n    );\n  }\n\n  return (\n    <div className='navbar-extra'>\n      <nav className=\"Navigation navbar navbar-expand-md\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          A2\n        </Link>\n        {anon ? loggedInNav() : loggedOutNav()}\n      </nav>\n      {/* <ColoredLine color=\"white\"/> */}\n    </div>\n  );\n}\n\nexport default Navigation;\n\n","import axios from \"axios\";\n\nconst BASE_URL = \"http://localhost:3001\";\n\n\nclass A2Api {\n  static token;\n  static async request(endpoint, data = {}, method = \"get\") {\n    // console.debug(\"API Call:\", endpoint, data, method);\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${A2Api.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n////////////////////////////////////////////////////////////////////////////////-posts\n//-add delete post\n\n  static async getPosts(params){\n    let res = await this.request(`post/`,params);\n    return res.posts;\n  }\n  static async createPost(params){\n    let res = await this.request('post/',params,'post');\n    return res.posts;\n  }\n\n////////////////////////////////////////////////////////////////////////////////-anons\n\n  static async getAnon(handle) {\n    let res = await this.request(`anon/${handle}`);\n    return res.anon;\n  }\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  static async register(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n  static async saveProfile(handle, data) {\n    let res = await this.request(`anon/${handle}`, data, \"patch\");\n    return res.anon;\n  }\n\n ////////////////////////////////////////////////////////////////////////////////-tags\n\n  static async getTags(tag){\n    let res = await this.request(`tag/`,{tag});\n    return res;\n  }\n\n  static async createTag(tag){\n    let res = await this.request('tag/',{tag},'post');\n  }\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // static async getCompanies(name) {\n  //   let res = await this.request(\"companies\", { name });\n  //   return res.companies;\n  // }\n\n  // static async getCompany(handle) {\n  //   let res = await this.request(`companies/${handle}`);\n  //   return res.company;\n  // }\n\n  // static async getJobs(title) {\n  //   let res = await this.request(\"jobs\", { title });\n  //   return res.jobs;\n  // }\n\n  // static async apply(handle, id) {\n  //   await this.request(`anon/${handle}/jobs/${id}`, {}, \"post\");\n  // }\n}\n\n\nexport default A2Api;\n\n","import React from \"react\";\n\n// import \"./LoadingSpinner.css\";\nimport '../styles/LoadingSpinner.css';\n\nfunction LoadingSpinner() {\n  return (\n      <div className=\"LoadingSpinner\">\n        Loading ...\n      </div>\n  );\n}\n\nexport default LoadingSpinner;","import React from \"react\";\nconst PostContext = React.createContext();\nexport default PostContext;","import $ from 'jquery';\nimport TagList from './TagList';\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass TagToggler{\n    // constructor(tag){\n    //     this._tag = tag.tag;\n    //     this._DOM_class = 'tag';\n    //     this._DOM_id = 'tag-'+tag.tag;\n    //     this._toggles = ['tag excluded','tag','tag included'];\n    //     this._searches = tag.searches || 0;\n    // }\n\n    static _toggles = ['tag excluded','tag','tag included'];\n\n    static toggles = ['tag excluded','tag neutral','tag included'];\n\n\n    static getTags(){\n        const tags = $('.tag');\n        return tags;\n    }\n\n    static getPostCards(){\n        const postCards = $('.PostCard');\n        return postCards;\n    }\n\n    static tagInclusion(tagElement){\n        return tagElement.className;\n    }\n\n    static tag(tagElement){\n        return tagElement.innerHTML;\n    }\n\n    static hasTag(postCard,tagElement){\n        const tags = postCard.querySelector('.pc-tags').innerHTML;\n        const tagArray = tags.split(/\\W+/);\n        return tagArray.includes(this.tag(tagElement));\n    }\n\n    static toggle(tagElement){\n        if(!this.isTagElement(tagElement))return;\n        const currentClassName = tagElement.className;\n        const currentIndex = this.toggles.indexOf(currentClassName);\n        const next = currentIndex + 1 > 2 ? 0 : currentIndex + 1;\n        const nextClassName = this.toggles[next];\n        tagElement.className = nextClassName;\n        this.displaySelected();\n    }\n\n    static displaySelected(){\n        $('.PostCard').show();\n        const postCards = this.getPostCards();\n\n        // console.log('postcards======================================',$('.PostCard'));\n\n        const excludedTags = $('.excluded');\n        const includedTags = $('.included');\n        const neutralTags =  $('.neutral');\n\n        const tags = $('.tag');\n\n        // const neutralTags = [...tags];\n\n        // console.log('exluded=========================',excludedTags);\n        // console.log('included========================',includedTags);\n        // console.log('tag=============================',tags);\n\n\n\n        for(let tag of includedTags){\n\n            for(let postCard of postCards){\n\n                if( !this.hasTag(postCard,tag) )\n                    $(postCard).hide();\n                else\n                    $(postCard).show();\n\n            }\n        }\n\n        for(let tag of excludedTags){\n            for(let postCard of postCards){\n                \n                if( !this.hasTag(postCard,tag) )\n                    $(postCard).show();\n                else\n                    $(postCard).hide();\n\n            }\n        }\n\n        // for(let tag of neutralTags){\n\n        //     for(let postCard of postCards){\n\n        //         if( !this.hasTag(postCard,tag) )\n        //             $(postCard).hide();\n        //         else\n        //             $(postCard).show();\n\n        //     }\n\n        // }\n    }\n\n    static showAllPostCards(){\n        $('.PostCard').show();\n    }\n\n    static isTagElement(tagElement){\n        return this.toggles.includes(tagElement.className);\n    }\n\n\n    static shouldBeIncluded(tagElement){\n        /**\n         * return  -1:exclude --tag\n         *          0:neutral --tag included\n         *          1:include --tag excluded\n         * from this._toggles (indexof - 1) this._DOM_class  \n         * for better readability and to simplify code\n         */\n        return this.toggles.indexOf(tagElement.className) - 1;\n    }\n\n    static shouldHaveTag(tagElement){\n        return this.toggles.indexOf(tagElement.className) - 1;\n    }\n    static _hasTag(postCard,tagElement){\n        const tags = postCard.querySelector('.pc-tags').innerHTML;\n        const tagArray = tags.split(/\\W+/);\n        return tagArray.includes(this.tag(tagElement)) ? 1 : -1;\n    }\n\n    static shouldShow(tagElement,postCard, threshold = -1){\n        // const algo = this.hasTag(postCard,tagElement) * this.shouldHaveTag(tagElement);\n        // console.log('algo=================================',algo);\n        // console.log(`${this.tag(tagElement)} algo at: ${algo}`);\n        let back = true;\n        if((this.shouldHaveTag(tagElement) === -1) && this.hasTag(postCard,tagElement) === 1){\n            back = false;\n        } else \n        if((this.shouldHaveTag(tagElement)) === 1 && this.hasTag(postCard,tagElement) === -1){\n            back = false;\n        } \n        return back;     \n    }\n\n\n\n    static filterPostCards(tagElement){\n        this.showAllPostCards();\n        const allPostCards = document.querySelectorAll('.PostCard');\n        for(let postCard of allPostCards){\n\n            const shouldShow = this.shouldShow(tagElement,postCard);\n\n            console.log(`postcard ${postCard.id} shouldShow?: ${shouldShow}`);\n\n            if(shouldShow)\n                $(postCard).show();\n            else\n                $(postCard).hide();\n\n            console.log(`postcard ${postCard.id} is showing?: ${$(postCard).is(':visible')}`);\n\n        }\n    }\n};\n\nexport default TagToggler;","import React, { useState, useEffect, useContext } from \"react\";\nimport '../styles/TagList.css';\nimport ColoredLine from '../common/ColoredLine';\nimport A2Api from \"../api/a2api\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\nimport PostContext from \"../posts/PostContext\";\n\nimport $ from 'jquery';\n\nimport TagToggler from \"./TagToggler\";\n\n\nfunction TagList(){\n\n    const {allPosts,setAllPosts} = useContext(PostContext);\n    const [allTags, setAllTags] = useState(null);\n    const [tagsIncluded,setTagsIncluded] = useState(null);\n    const [tagsExcluded,setTagsExcluded] = useState(null);\n\n    // const [toggleTags,setToggleTags] = useState(null);\n\n    // const [tagsInfo,setTagsInfo] = useState(null);\n\n    const tagIncluded = 'tag-included';\n    const tagExcluded = 'tag-excluded';\n\n    useEffect(function getTagsOnMount() {\n      search();\n    }, []);\n  \n    async function search(params) {\n        // console.log('PARAMS IN TAGLIST ',params);\n        let result = await A2Api.getTags(params);\n        result.tags.sort((a,b)=>{\n            return a.tag > b.tag ? 1 : -1;\n        });\n        const sorted = result.tags;\n\n\n        setAllTags(sorted);\n        setTagsIncluded(sorted);\n\n        // console.log('==============================================');\n\n        /////////////////////////////////////////////////////////////////////////\n        // const tts = [];\n        // for(let tag of sorted){\n        //     const toggleTag = new ToggleTag(tag);\n        //     // console.log('tt===========================',tag);\n        //     tts.push(toggleTag);\n        // }\n        // setToggleTags(tts);\n\n        // console.log('TOGGLETAGS==================================',tts);\n\n        // console.log('toggletags==========================================',toggleTags);\n    }\n\n    function getAllPostCards(){\n        return document.querySelectorAll('.PostCard');\n    }\n\n    function displayTaggedClient(e){\n        const target = e.target;\n        TagToggler.toggle(target);\n        if(target.className != 'tag')return;\n        const clickedTag = target.innerHTML;\n        const allPostCards = document.querySelectorAll('.PostCard');\n        for(let postCard of allPostCards){\n            const postCardId = postCard.id;\n            const tags = postCard.querySelector('.pc-tags').innerHTML;\n            const tagArray = tags.split(/\\W+/);\n            if(!tagArray.includes(clickedTag)){\n                $(postCard).hide();\n            }                        \n        }\n    }\n\n    function clickHandler(e){\n        if(e.target.id==='test-click'){\n            TagToggler.getTags();\n            $('.PostCard').show();\n        }\n        displayTaggedClient(e);\n    }\n\n\n    if (!allTags) return <LoadingSpinner />;\n\n    return <div className='tag-list' style={{\n        height: window.outerHeight \n        }} onClick={(e)=>clickHandler(e)}>\n\n            <h3 id=\"test-click\">Popular Tags</h3>\n            <ColoredLine color=\"white\"/>\n\n            {allTags.map(p => (\n                <div className=\"tag neutral\" key={p.id} id={'tag-'+p.tag}>\n                    {p.tag}\n                </div>\n            ))} \n\n    </div>\n}\n\nexport default TagList;\n\n","import React, { useState } from \"react\";\n\n// import \"./SearchForm.css\";\nimport '../styles/SearchForm.css';\n\nfunction SearchForm({ searchFor }) {\n  console.debug(\"SearchForm\", \"searchFor=\", typeof searchFor);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    searchFor(searchTerm.trim() || undefined);\n    setSearchTerm(searchTerm.trim());\n  }\n\n  function handleChange(evt) {\n    setSearchTerm(evt.target.value);\n  }\n\n  return (\n      <div className=\"SearchForm mb-4\">\n        <form className=\"form-inline\" onSubmit={handleSubmit}>\n          <input\n              className=\"form-control form-control-lg flex-grow-1\"\n              name=\"searchTerm\"\n              placeholder=\"Enter search term..\"\n              value={searchTerm}\n              onChange={handleChange}\n          />\n          <button type=\"submit\" className=\"btn btn-lg btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport picunrel from \"../resources/images/picunrel.jpeg\";\n\nimport ColoredLine from \"../common/ColoredLine\";\n\n// import \"./PostCard.css\";\nimport '../styles/PostCard.css';\n\n// import questionBanner from \"../resources/images/questionBanner.png\";\n\n\nfunction PostCard(props) {\n    return (\n            <div className=\"PostCard\" id={`postcard-${props.id}` }>\n                <div className=\"image-subject\">\n                    {props.post_subject}\n                </div>\n\n                <ColoredLine color=\"white\"/>\n\n                <div>\n                    <img src={picunrel} alt='' className=\"post-image-preview\" />\n                </div>\n\n                <ColoredLine color=\"white\"/>\n\n                <small>\n                    <div className='centered'>\n                        posted by : {props.poster_handle}\n                    </div>\n\n                    <div className='centered'>\n                        posted at: {props.post_date}\n                    </div>\n\n                    <div className='centered pc-tags'>\n                        tags : {props.post_tags}\n                    </div>\n                </small>\n\n                <div>\n                    {props.admin_post}\n                </div>\n\n                <div>\n                    {props.reply_to}\n                </div>\n            </div>\n    );\n}\n\nexport default PostCard;\n","import React from \"react\";\nimport '../styles/TopBanner.css';\n\n// import untitled from \"../resources/images/untitled.jpg\";\n\nfunction TopBanner() {\n    return (\n        <div className=\"top-banner\">\n            <div className=\"container text-center\">\n                <h1 className=\"mb-4 font-weight-bold\">Anons Anonymous</h1>\n                <p className=\"lead\">anti-social networking</p>\n            </div>\n        </div>\n    );\n  }\n  \n  export default TopBanner;","import React, { useState, useEffect, useContext } from \"react\";\nimport SearchForm from \"../common/SearchForm\";\nimport A2Api from \"../api/a2api\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport PostCard from \"./PostCard\";\nimport { useHistory } from \"react-router-dom\";\nimport '../styles/PostsDisplay.css';\nimport TopBanner from \"../top-banner/TopBanner\";\n\nimport PostContext from \"./PostContext\";\n\nfunction PostsDisplay(){\n\n    // const [posts, setPosts] = useState(null);\n\n    const {allPosts,setAllPosts} = useContext(PostContext);\n\n    useEffect(function getPostsOnMount() {\n      search();\n    }, []);\n  \n    async function search(params) {\n      let posts = await A2Api.getPosts(params);\n      setAllPosts(posts);\n    }\n\n    const history = useHistory();\n\n    if (!allPosts) return <LoadingSpinner />;\n\n    function clickHandler(e){\n      let elem = e.target;\n      let maxJumps = 99;\n      while(elem.className != 'PostCard' && maxJumps > 0){\n        maxJumps--;\n        elem = elem.parentNode;\n      }\n      const postId = elem.id.slice(9);\n      history.push(`/posts/${postId}`);\n    }    \n\n    return (\n      <div className=\"main-view\">\n        <TopBanner/>\n        <div className=\"posts-display\">\n          <div onClick={(e)=>clickHandler(e)}>\n            {allPosts.map(p => (\n              <PostCard \n                key={p.id}\n                post_date = {p.post_date}\n                poster_handle={p.poster_handle}\n                post_body = {p.post_body}\n                post_subject = {p.post_subject}\n                post_tags = {p.post_tags}\n                admin_post = {p.admin_post}\n                reply_to = {p.reply_to}\n                image = {p.image}\n                id = {p.id}\n              />\n            ))}   \n          </div>;\n          \n        </div>\n\n      </div>\n\n\n    );\n}\n\n\nexport default PostsDisplay;\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../styles/Landingpage.css';\nimport AnonContext from \"../auth/AnonContext\";\nimport { useHistory } from \"react-router-dom\";\nimport TagList from '../tag-list/TagList';\nimport PostsDisplay from \"../posts/PostsDisplay\";\nimport '../styles/Landingpage.css';\n\nimport PostContext from \"../posts/PostContext\";\n\n// function Component1() {\n//   const [user, setUser] = useState(\"Jesse Hall\");\n\n//   return (\n//     <UserContext.Provider value={user}>\n//       <h1>{`Hello ${user}!`}</h1>\n//       <Component2 user={user} />\n//     </UserContext.Provider>\n//   );\n// }\n\nfunction Landingpage({getAllPosts}) {\n\n  const { anon } = useContext(AnonContext);\n\n  const history  = useHistory();\n\n  const [allPosts,setAllPosts] = useState(null);\n\n  return ( \n\n    <div>\n\n      <div className=\"Landingpage\">\n\n        <PostContext.Provider value={{allPosts,setAllPosts}}>\n\n          <TagList/>\n\n          <div className=\"PostsDisplay-container\">\n\n            <div>\n\n              <PostsDisplay getAllPosts={getAllPosts}/>\n\n            </div>\n\n          </div>\n\n        </PostContext.Provider>\n\n      </div>\n\n    </div>\n\n  );\n}\n\n\nexport default Landingpage;\n\n\n\n\n/* <h1 className=\"mb-4 font-weight-bold\">Anons Anonymous</h1>\n<p className=\"lead\">anti-social networking</p> */\n/* {anon ? <OldAnon anon={anon}/> :  */\n        /* // <NewAnon anon={anon}/> */\n\n/* {history.push('/posts')} */\n\n\n\n// function OldAnon(props){\n//   return <div>\n//     <h2>\n//       Welcome Back, {props.anon.handle}\n//     </h2>\n//     <Link className=\"btn btn-primary font-weight-bold\"\n//           to=\"/posts\">\n//           View Latest Posts\n//     </Link>\n//   </div>;\n// }\n\n// function NewAnon(props){\n//   return <div>\n//     <p>\n//       <Link className=\"btn btn-primary font-weight-bold mr-3\"\n//             to=\"/login\">\n//         Log in\n//       </Link>\n//       <Link className=\"btn btn-primary font-weight-bold\"\n//             to=\"/register\">\n//         Register\n//       </Link>\n//     </p>\n    \n//     <Link className=\"btn btn-primary font-weight-bold\"\n//             to=\"/posts\">\n//         View Latest Posts\n//     </Link>\n//   </div>;\n// }\n","import React from \"react\";\n\nfunction Alert({ type = \"danger\", messages = [] }) {\n  console.debug(\"Alert\", \"type=\", type, \"messages=\", messages);\n\n  return (\n      <div className={`alert alert-${type}`} role=\"alert\">\n        {messages.map(error => (\n            <p className=\"mb-0 small\" key={error}>\n              {error}\n            </p>\n        ))}\n      </div>\n  );\n}\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\n\nfunction LoginForm({ login }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    handle: \"\",\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  console.debug(\n      \"LoginForm\",\n      \"login=\", typeof login,\n      \"formData=\", formData,\n      \"formErrors\", formErrors,\n  );\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let loginResult = await login(formData);\n    console.log('loginResult= ',loginResult);\n    if (loginResult.success) {\n      history.push(\"/posts\");\n    } else {\n      setFormErrors(loginResult.errors);\n    }\n  }\n  \n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(l => ({ ...l, [name]: value }));\n  }\n\n  return (\n      <div className=\"LoginForm\">\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n          <h3 className=\"mb-3\">Log In</h3>\n\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label>Handle</label>\n                  <input\n                      name=\"handle\"\n                      className=\"form-control\"\n                      value={formData.handle}\n                      onChange={handleChange}\n                      autoComplete=\"handle\"\n                      required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"password\"\n                      className=\"form-control\"\n                      value={formData.password}\n                      onChange={handleChange}\n                      autoComplete=\"current-password\"\n                      required\n                  />\n                </div>\n\n                {formErrors.length\n                    ? <Alert type=\"danger\" messages={formErrors} />\n                    : null}\n\n                <button\n                    className=\"btn btn-primary float-right\"\n                    onSubmit={handleSubmit}\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\n\nfunction randomAnon(){\n  return `Anonymous${Math.floor(Math.random() * 999999)}`;\n}\n\nfunction RegistrationForm({ register }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    handle: \"john\",\n    password: \"password\",\n    confirmPassword:\"password\",\n    securityQuestion:\"password\",\n    securityAnswer:\"password\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  console.debug(\n      \"RegistrationForm\",\n      \"register=\", typeof register,\n      \"formData=\", formData,\n      \"formErrors=\", formErrors,\n  );\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let result = await register(formData);\n    if (result.success) {\n      history.push(\"/\");\n    } else {\n      setFormErrors(result.errors);\n    }\n  }\n  \n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(data => ({ ...data, [name]: value }));\n  }\n\n  return (\n      <div className=\"RegistrationForm\">\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n          <h2 className=\"mb-3\">Create Account</h2>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label>Handle</label>\n                  <input\n                      name=\"handle\"\n                      className=\"form-control\"\n                      value={formData.handle}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"password\"\n                      className=\"form-control\"\n                      value={formData.password}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Confirm Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"confirmPassword\"\n                      className=\"form-control\"\n                      value={formData.confirmPassword}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Security Question ( for account recovery )</label>\n                  <input\n                      name=\"securityQuestion\"\n                      className=\"form-control\"\n                      value={formData.securityQuestion}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Answer</label>\n                  <input\n                      name=\"securityAnswer\"\n                      className=\"form-control\"\n                      value={formData.securityAnswer}\n                      onChange={handleChange}\n                  />\n                </div>\n\n                {formErrors.length\n                    ? <Alert type=\"danger\" messages={formErrors} />\n                    : null\n                }\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary float-right\"\n                    onSubmit={handleSubmit}\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default RegistrationForm;","import React, { useState,useContext } from \"react\";\n// import React, { useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\n\nimport AnonContext from \"../auth/AnonContext\";\n\nfunction generateRandomTag(){\n  return `tag${Math.floor(Math.random()*10)} `;\n}\n\nfunction generateRandomTags(number = 3, size=10){\n  let back = '';\n  const tags = [];\n  for(let count = 0; count < number; count++){\n    let val = Math.floor(Math.random()*size);\n    while(tags.includes(val)){\n      val = Math.floor(Math.random()*size);\n    }\n    tags.push(val);\n  }\n  for(let count = 0; count < number; count++){\n    back += `Tag${tags[count]} `;\n  }\n  return back;\n}\n\nfunction NewPostForm({ createPost }) {\n  const { anon } = useContext(AnonContext);\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    post_subject: \"john\",\n    post_body: \"blah blah blah\",\n    post_tags: generateRandomTags()\n  });\n  const [formErrors, setFormErrors] = useState([]);\n  console.debug(\n      \"NewPostForm\",\n      \"createPost=\", typeof createPost,\n      \"formData=\", formData,\n      \"formErrors=\", formErrors,\n  );\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    const date = new Date();\n    formData.post_date = date;\n    let result = await createPost(formData);\n    if (result.success) {\n      history.push(\"/\");\n    } else {\n      setFormErrors(result.errors);\n    }\n  }\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(data => ({ ...data, [name]: value }));\n  }\n\n  return (\n      <div className=\"NewPostForm\">\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n          <h2 className=\"mb-3 text-primary\">New Thread</h2>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label>Subject</label>\n                  <input\n                      name=\"post_subject\"\n                      className=\"form-control\"\n                      value={formData.post_subject}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Body</label>\n                  <textarea rows=\"10\" cols=\"10\" \n                      name=\"post_body\"\n                      className=\"form-control\"\n                      value={formData.post_body}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Tags</label>\n                  <input\n                      name=\"post_tags\"\n                      className=\"form-control\"\n                      value={formData.post_tags}\n                      onChange={handleChange}\n                  />\n                </div>\n\n                {formErrors.length\n                    ? <Alert type=\"danger\" messages={formErrors} />\n                    : null\n                }\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary float-right\"\n                    onSubmit={handleSubmit}\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default NewPostForm;","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport picunrel from \"../resources/images/picunrel.jpeg\";\nimport A2Api from \"../api/a2api\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport ColoredLine from \"../common/ColoredLine\";\n\nimport '../styles/Post.css';\n// import \"./Post.css\";\n\nimport { useHistory } from \"react-router-dom\";\n\nfunction Post(props) {\n\n    const {id} = useParams();\n\n    const [post, setPost] = useState(null);\n    useEffect(function getPostsOnMount() {\n        search();\n    }, []);\n  \n    async function search() {\n        let result = await A2Api.getPosts({id:id});\n        setPost(result);\n    }\n\n    if (!post) return <LoadingSpinner />;\n\n    // console.log('post=======================',post);\n\n    return <div className=\"post-page\">\n\n                <div className=\"Post\" id={`Post-${post[0].id}` }>\n                    <div className=\"image-subject\">\n                        {post.post_subject}\n                    </div>\n\n                    <ColoredLine color=\"white\"/>\n\n                    <div>\n                        <img src={picunrel} alt='' className=\"post-image-preview\" />\n                    </div>\n\n                    <ColoredLine color=\"white\"/>\n\n                    <div>\n                        {post[0].post_body}\n                    </div>\n\n                    <ColoredLine color=\"white\"/>\n\n                    <small>\n                        <div className='centered'>\n                            posted by : {post[0].poster_handle}\n                        </div>\n\n                        <div className='centered'>\n                            posted at: {post[0].post_date}\n                        </div>\n\n                        <div className='centered'>\n                            tags : {post[0].post_tags}\n                        </div>\n                    </small>\n\n                    <div>\n                        {post[0].admin_post}\n                    </div>\n\n                    <div>\n                        {post[0].reply_to}\n                    </div>\n                </div>\n\n            </div>\n                \n    \n}\n\nexport default Post;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Landingpage from \"../landingpage/Landingpage\";\nimport LoginForm from \"../auth/LoginForm\";\nimport RegistrationForm from \"../auth/RegistrationForm\";\nimport NewPostForm from \"../posts/NewPostForm\";\nimport PostsDisplay from \"../posts/PostsDisplay\";\nimport Post from \"../posts/Post\";\n\nfunction Routes({ login, register, createPost, getAllPosts }) {\n  // console.debug(\n  //     \"Routes\",\n  //     `login=${typeof login}`,\n  //     `register=${typeof register}`,\n  // );\n\n  \n  return (\n      <div className=\"pt-5\">\n        <Switch>\n\n          <Route exact path=\"/\">\n            <Landingpage getAllPosts={getAllPosts}/>\n          </Route>\n\n          <Route exact path=\"/login\">\n            <LoginForm login={login} />\n          </Route>\n\n          <Route exact path=\"/register\">\n            <RegistrationForm register={register}/>\n          </Route>\n\n          <Route exact path=\"/new-post\">\n            <NewPostForm createPost={createPost}/>\n          </Route>\n\n          <Route exact path=\"/posts\">\n            <PostsDisplay />\n          </Route>\n\n          <Route exact path=\"/posts/:id\">\n            <Post />\n          </Route>\n          \n\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n  );\n}\n\nexport default Routes;\n\n\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport Navigation from \"./routes-nav/Navigation\";\nimport Routes from \"./routes-nav/Routes\";\nimport LoadingSpinner from \"./common/LoadingSpinner\";\nimport A2Api from \"./api/a2api\";\nimport AnonContext from \"./auth/AnonContext\";\nimport jwt from \"jsonwebtoken\";\n\nexport const A2_TOKEN = \"anonanon-token\";\n\nfunction App() {\n  \n  const [anon, setAnon] = useState(null);\n  const [token, setToken] = useLocalStorage(A2_TOKEN);\n  const [loaded, setLoaded] = useState(false);\n  // const [posts, setPosts] = useState(null);\n\n  useEffect(function loadanonInfo() {\n\n    async function getAnon() {\n      if (token) {\n        try {\n          let { handle } = jwt.decode(token);\n          A2Api.token = token;\n          let anon = await A2Api.getAnon(handle);\n          setAnon(anon);\n        } catch (err) {\n          console.error(\"App loadanonInfo: problem loading\", err);\n          setAnon(null);\n        }\n      }\n      setLoaded(true);\n    }\n    setLoaded(false);\n    getAnon();\n  }, [token]);\n\n  function logout() {\n    setAnon(null);\n    setToken(null);\n  }\n\n  async function register(registerData) {\n    try {\n      let token = await A2Api.register(registerData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"register failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  async function createTags(tagString){\n    const tags = tagString.split(/\\W+/);\n    // console.log('IN APP listing tags: ',tags);\n    for(let tag of tags){\n      // console.log('IN APP going through tags loop current is:',tag);\n      try{\n        await A2Api.createTag(tag);\n        // console.log('successfully added tag: ',tag);\n      } catch(errors){\n        console.log('failed to create tag: ',tag);\n        console.log('errors ',errors);\n      }\n    } \n  }\n\n  async function createPost(postData){\n    try {\n      postData.poster_handle = anon.handle;\n      await A2Api.createPost(postData);\n      await createTags(postData.post_tags);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"create post failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  async function login(loginData) {\n    console.log('login');\n    try {\n      let token = await A2Api.login(loginData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  if (!loaded) return <LoadingSpinner />;\n\n  return (\n      <BrowserRouter>\n        <AnonContext.Provider value={{ anon, setAnon}}>\n          <div className=\"App\">\n            <Navigation logout={logout} />\n            <Routes login={login} \n                    register={register} \n                    createPost={createPost} />\n          </div>\n        </AnonContext.Provider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === \"installed\") {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    \"New content is available and will be used when all \" +\n                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log(\"Content is cached for offline use.\");\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error(\"Error during service worker registration:\", error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get(\"content-type\");\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf(\"javascript\") === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            \"No internet connection found. App is running in offline mode.\",\n        );\n      });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// import \"./index.css\";\nimport './styles/index.css';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/picunrel.998da47a.jpeg\";"],"sourceRoot":""}